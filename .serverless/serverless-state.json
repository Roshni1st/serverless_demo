{
  "service": {
    "service": "youtube-api",
    "serviceObject": {
      "name": "youtube-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "region": "ap-south-1",
      "timeout": 60,
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "UsersAllLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/youtube-api-dev-usersAll"
            }
          },
          "UsersOneLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/youtube-api-dev-usersOne"
            }
          },
          "SaveUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/youtube-api-dev-saveUser"
            }
          },
          "RemoveUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/youtube-api-dev-removeUser"
            }
          },
          "EditUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/youtube-api-dev-editUser"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "youtube-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/youtube-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/youtube-api-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "youtube-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "UsersAllLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/youtube-api/dev/1706607274519-2024-01-30T09:34:34.519Z/youtube-api.zip"
              },
              "Handler": "/.webpack/functions/handler.usersAll",
              "Runtime": "nodejs14.x",
              "FunctionName": "youtube-api-dev-usersAll",
              "MemorySize": 1024,
              "Timeout": 60,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UsersAllLogGroup"
            ]
          },
          "UsersOneLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/youtube-api/dev/1706607274519-2024-01-30T09:34:34.519Z/youtube-api.zip"
              },
              "Handler": "/.webpack/functions/handler.usersOne",
              "Runtime": "nodejs14.x",
              "FunctionName": "youtube-api-dev-usersOne",
              "MemorySize": 1024,
              "Timeout": 60,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UsersOneLogGroup"
            ]
          },
          "SaveUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/youtube-api/dev/1706607274519-2024-01-30T09:34:34.519Z/youtube-api.zip"
              },
              "Handler": ".webpack//functions/handler.saveUser",
              "Runtime": "nodejs14.x",
              "FunctionName": "youtube-api-dev-saveUser",
              "MemorySize": 1024,
              "Timeout": 60,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SaveUserLogGroup"
            ]
          },
          "RemoveUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/youtube-api/dev/1706607274519-2024-01-30T09:34:34.519Z/youtube-api.zip"
              },
              "Handler": ".webpack//functions/handler.removeUser",
              "Runtime": "nodejs14.x",
              "FunctionName": "youtube-api-dev-removeUser",
              "MemorySize": 1024,
              "Timeout": 60,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RemoveUserLogGroup"
            ]
          },
          "EditUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/youtube-api/dev/1706607274519-2024-01-30T09:34:34.519Z/youtube-api.zip"
              },
              "Handler": ".webpack//functions/handler.editUser",
              "Runtime": "nodejs14.x",
              "FunctionName": "youtube-api-dev-editUser",
              "MemorySize": 1024,
              "Timeout": 60,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EditUserLogGroup"
            ]
          },
          "UsersAllLambdaVersion1TkL0Oy2KGFlHehSqpXDT6saTIwh7W1mashHItCQA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersAllLambdaFunction"
              },
              "CodeSha256": "hazvGjNA0U/RvGtU8SnCOliJnqu0sqPIyawsiCARSnI="
            }
          },
          "UsersOneLambdaVersionzuIFmgNAKgyhcEshA2pLMCOq2ulGu29bS9IhSXQZ4M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersOneLambdaFunction"
              },
              "CodeSha256": "hazvGjNA0U/RvGtU8SnCOliJnqu0sqPIyawsiCARSnI="
            }
          },
          "SaveUserLambdaVersionAKIsWVZ9Cs5e05Rh7932WvEkwnycq7p6C3TSvksp1FM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SaveUserLambdaFunction"
              },
              "CodeSha256": "hazvGjNA0U/RvGtU8SnCOliJnqu0sqPIyawsiCARSnI="
            }
          },
          "RemoveUserLambdaVersionfEZP3iQmVjAkqzphR1VXQbuSYc2mmiEcEIuE0oEKcg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RemoveUserLambdaFunction"
              },
              "CodeSha256": "hazvGjNA0U/RvGtU8SnCOliJnqu0sqPIyawsiCARSnI="
            }
          },
          "EditUserLambdaVersionN3FrjCr27m0PXQcqG2LoqmoyMMpDlUMLBuIQiwbpUM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EditUserLambdaFunction"
              },
              "CodeSha256": "hazvGjNA0U/RvGtU8SnCOliJnqu0sqPIyawsiCARSnI="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-youtube-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "UsersAllLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersAllLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUsersAll": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersAllLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetUsers": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /users",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUsersAll"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUsersAll"
          },
          "UsersOneLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersOneLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUsersOne": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersOneLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetUsersIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /users/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUsersOne"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUsersOne"
          },
          "SaveUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SaveUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSaveUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SaveUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsers": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /users",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSaveUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSaveUser"
          },
          "RemoveUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RemoveUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRemoveUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RemoveUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteUsersIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /users/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRemoveUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRemoveUser"
          },
          "EditUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EditUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEditUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EditUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUsersIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /users/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEditUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEditUser"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "UsersAllLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersAllLambdaVersion1TkL0Oy2KGFlHehSqpXDT6saTIwh7W1mashHItCQA"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-UsersAllLambdaFunctionQualifiedArn"
            }
          },
          "UsersOneLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersOneLambdaVersionzuIFmgNAKgyhcEshA2pLMCOq2ulGu29bS9IhSXQZ4M"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-UsersOneLambdaFunctionQualifiedArn"
            }
          },
          "SaveUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SaveUserLambdaVersionAKIsWVZ9Cs5e05Rh7932WvEkwnycq7p6C3TSvksp1FM"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-SaveUserLambdaFunctionQualifiedArn"
            }
          },
          "RemoveUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RemoveUserLambdaVersionfEZP3iQmVjAkqzphR1VXQbuSYc2mmiEcEIuE0oEKcg"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-RemoveUserLambdaFunctionQualifiedArn"
            }
          },
          "EditUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EditUserLambdaVersionN3FrjCr27m0PXQcqG2LoqmoyMMpDlUMLBuIQiwbpUM"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-EditUserLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-youtube-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-youtube-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "sequelize-migrations": {
        "modelsDir": "/models"
      }
    },
    "plugins": [
      "serverless-offline",
      "serverless-sequelize-migrations"
    ],
    "pluginsData": {},
    "functions": {
      "usersAll": {
        "handler": "/.webpack/functions/handler.usersAll",
        "events": [
          {
            "httpApi": {
              "path": "/users",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/users"
          }
        ],
        "name": "youtube-api-dev-usersAll",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "UsersAllLambdaVersion1TkL0Oy2KGFlHehSqpXDT6saTIwh7W1mashHItCQA"
      },
      "usersOne": {
        "handler": "/.webpack/functions/handler.usersOne",
        "events": [
          {
            "httpApi": {
              "path": "/users/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/users/{id}"
          }
        ],
        "name": "youtube-api-dev-usersOne",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "UsersOneLambdaVersionzuIFmgNAKgyhcEshA2pLMCOq2ulGu29bS9IhSXQZ4M"
      },
      "saveUser": {
        "handler": ".webpack//functions/handler.saveUser",
        "events": [
          {
            "httpApi": {
              "path": "/users",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/users"
          }
        ],
        "name": "youtube-api-dev-saveUser",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "SaveUserLambdaVersionAKIsWVZ9Cs5e05Rh7932WvEkwnycq7p6C3TSvksp1FM"
      },
      "removeUser": {
        "handler": ".webpack//functions/handler.removeUser",
        "events": [
          {
            "httpApi": {
              "path": "/users/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/users/{id}"
          }
        ],
        "name": "youtube-api-dev-removeUser",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "RemoveUserLambdaVersionfEZP3iQmVjAkqzphR1VXQbuSYc2mmiEcEIuE0oEKcg"
      },
      "editUser": {
        "handler": ".webpack//functions/handler.editUser",
        "events": [
          {
            "httpApi": {
              "path": "/users/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/users/{id}"
          }
        ],
        "name": "youtube-api-dev-editUser",
        "package": {},
        "memory": 1024,
        "timeout": 60,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "EditUserLambdaVersionN3FrjCr27m0PXQcqG2LoqmoyMMpDlUMLBuIQiwbpUM"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "youtube-api",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "D:\\Node-Tatva\\basic-servrerless-demo\\.serverless\\youtube-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/youtube-api/dev/1706607274519-2024-01-30T09:34:34.519Z",
    "artifact": "youtube-api.zip"
  }
}